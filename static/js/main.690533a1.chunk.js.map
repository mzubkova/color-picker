{"version":3,"sources":["ColorPicker.js","App.js","reportWebVitals.js","index.js"],"names":["rgbToHex","rgb","hex","Number","toString","length","initialState","red","green","blue","reducer","state","action","type","value","ColorPicker","r","g","b","useReducer","dispatch","className","min","max","step","id","onChange","e","target","style","background","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAEMA,EAAW,SAACC,GAChB,IAAIC,EAAMC,OAAOF,GAAKG,SAAS,IAI/B,OAHIF,EAAIG,OAAS,IACfH,EAAM,IAAMA,GAEP,GAAKA,GAORI,EAAe,CACnBC,IAAK,MACLC,MAAO,MACPC,KAAM,OAGR,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,MACH,OAAO,2BAAKF,GAAZ,IAAmBJ,IAAKK,EAAOE,QACjC,IAAK,OACH,OAAO,2BAAKH,GAAZ,IAAmBF,KAAMG,EAAOE,QAClC,IAAK,QAEL,IAAK,QACH,OAAO,2BACFH,GADL,IAEEH,MAAOI,EAAOE,QAElB,QACE,OAAOH,GAIb,IAsDeI,EAtDK,WAAO,IA5BRC,EAAGC,EAAGC,EA4BC,EACEC,qBAAWT,EAASJ,GADtB,mBACjBK,EADiB,KACVS,EADU,KAGxB,OACE,8BACE,sBAAKC,UAAU,WAAf,UACE,uBACER,KAAK,QACLS,IAAI,IACJC,IAAI,MACJC,KAAK,IACLC,GAAG,MACHC,SAAU,SAACC,GAAD,OAAOP,EAAS,CAAEP,KAAM,MAAOC,MAAOa,EAAEC,OAAOd,SACzDA,MAAOH,EAAMJ,MAEf,uBACEM,KAAK,QACLS,IAAI,IACJC,IAAI,MACJC,KAAK,IACLC,GAAG,QACHC,SAAU,SAACC,GAAD,OACRP,EAAS,CAAEP,KAAM,QAASC,MAAOa,EAAEC,OAAOd,SAE5CA,MAAOH,EAAMH,QAEf,uBACEK,KAAK,QACLS,IAAI,IACJC,IAAI,MACJC,KAAK,IACLC,GAAG,OACHC,SAAU,SAACC,GAAD,OACRP,EAAS,CAAEP,KAAM,OAAQC,MAAOa,EAAEC,OAAOd,SAE3CA,MAAOH,EAAMF,OAEf,qBACEY,UAAU,qBACVQ,MAAO,CACLC,YApEOd,EAoEeL,EAAMJ,IApElBU,EAoEuBN,EAAMH,MApE1BU,EAoEiCP,EAAMF,KAnEvD,IAAMT,EAASgB,GAAUhB,EAASiB,GAAKjB,EAASkB,OAsEjD,wBACEG,UAAU,cACVU,QAAS,SAACJ,GAAD,OAAOP,EAAS,CAAEP,KAAM,QAASC,MAAOa,EAAEC,OAAOd,SAF5D,yBCtEOkB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.690533a1.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nconst rgbToHex = (rgb) => {\r\n  let hex = Number(rgb).toString(16);\r\n  if (hex.length < 2) {\r\n    hex = \"0\" + hex;\r\n  }\r\n  return \"\" + hex;\r\n};\r\n\r\nconst hexString = (r, g, b) => {\r\n  return \"#\" + rgbToHex(r) + \"\" + rgbToHex(g) + rgbToHex(b);\r\n};\r\n\r\nconst initialState = {\r\n  red: \"101\",\r\n  green: \"157\",\r\n  blue: \"189\",\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"red\":\r\n      return { ...state, red: action.value };\r\n    case \"blue\":\r\n      return { ...state, blue: action.value };\r\n    case \"green\":\r\n      return { ...state, green: action.value };\r\n    case \"reset\":\r\n      return {\r\n        ...state,\r\n        green: action.value,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst ColorPicker = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"boxColor\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          step=\"1\"\r\n          id=\"red\"\r\n          onChange={(e) => dispatch({ type: \"red\", value: e.target.value })}\r\n          value={state.red}\r\n        ></input>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          step=\"1\"\r\n          id=\"green\"\r\n          onChange={(e) =>\r\n            dispatch({ type: \"green\", value: e.target.value })\r\n          }\r\n          value={state.green}\r\n        ></input>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          step=\"1\"\r\n          id=\"blue\"\r\n          onChange={(e) =>\r\n            dispatch({ type: \"blue\", value: e.target.value })\r\n          }\r\n          value={state.blue}\r\n        ></input>\r\n        <div\r\n          className=\"displayColorPicker\"\r\n          style={{\r\n            background: hexString(state.red, state.green, state.blue),\r\n          }}\r\n        ></div>\r\n        <button\r\n          className=\"buttonReset\"\r\n          onClick={(e) => dispatch({ type: \"reset\", value: e.target.value })}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import \"./App.css\";\nimport ColorPicker from \"./ColorPicker\";\n\nfunction App() {\n  return (\n    <div>\n      <ColorPicker />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}